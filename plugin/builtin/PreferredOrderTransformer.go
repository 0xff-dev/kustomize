// Code generated by pluginator on PreferredOrderTransformer; DO NOT EDIT.
package builtin

import (
	"sigs.k8s.io/kustomize/pkg/resmap"
	"sigs.k8s.io/kustomize/pkg/resource"
	"sigs.k8s.io/kustomize/pkg/transformers/config"
	"sort"
)

// Sort the resources using an ordering defined in the Gvk class.
// This puts cluster-wide basic resources with no
// dependencies (like Namespace, StorageClass, etc.)
// first, and resources with a high number of dependencies
// (like ValidatingWebhookConfiguration) last.
type PreferredOrderTransformerPlugin struct {
	Prefix     string             `json:"prefix,omitempty" yaml:"prefix,omitempty"`
	Suffix     string             `json:"suffix,omitempty" yaml:"suffix,omitempty"`
	FieldSpecs []config.FieldSpec `json:"fieldSpecs,omitempty" yaml:"fieldSpecs,omitempty"`
}

func NewPreferredOrderTransformerPlugin() *PreferredOrderTransformerPlugin {
	return &PreferredOrderTransformerPlugin{}
}

/*
func (p *PreferredOrderTransformerPlugin) Config(
	ldr ifc.Loader, rf *resmap.Factory, c []byte) (err error) {
	return nil
}
*/
func (p *PreferredOrderTransformerPlugin) Transform(m resmap.ResMap) error {
	resources := make([]*resource.Resource, m.Size())
	ids := m.AllIds()
	sort.Sort(resmap.IdSlice(ids))
	for i, id := range ids {
		resources[i] = m.GetById(id)
	}
	m.Clear()
	for i, id := range ids {
		m.AppendWithId(id, resources[i])
	}
	return nil
}
